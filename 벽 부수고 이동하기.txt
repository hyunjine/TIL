import sys
from collections import deque
rl = sys.stdin.readline
N, M = map(int, rl().split())
GRAPH = [[*rl().rstrip()] for _ in range(N)]
visited = [[[0] * 2 for _ in range(M)] for _ in range(N)]
visited[0][0][0] = 1
Q = deque([(0, 0, 0)])
MIN = -1
while Q:
  x,y,c = Q.popleft()
  for dx,dy in [(x+1,y),(x-1,y),(x,y+1),(x,y-1)]:
    if 0<=dx<N and 0<=dy<M:
      if GRAPH[dx][dy] == '0' and visited[dx][dy][c] == 0:
        visited[dx][dy][c] = visited[x][y][c] + 1
        Q.append((dx, dy,c))
      elif GRAPH[dx][dy] == '1' and c == 0:
        visited[dx][dy][c+1] = visited[x][y][c] +1
        Q.append((dx, dy, c+1))
  if x == N-1 and y == M-1:
    MIN = visited[x][y][c]
    break
print(MIN)