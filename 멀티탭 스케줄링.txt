import sys
from collections import deque
from heapq import heappop, heappush
rl = sys.stdin.readline

def solution(n, k, _arr):
  answer = 0
  queue = deque(_arr)
  current = set()
  for i in range(k):
    if not queue or len(current) == n: break
    current.add(queue.popleft())
  while queue:
    v = queue.popleft()
    if v in current: continue
    heap = []
    for c in current:
      if c not in queue:
        heappush(heap, (-(k+1), c))
        break
      for i,q in enumerate(queue):
        if c == q: 
          heappush(heap, (-i, c))
          break
    p = heappop(heap)[1]
    current.remove(p)
    current.add(v)
    answer += 1
  return answer
        

n, k = map(int, rl().split())
arr = list(map(int, rl().split()))
answer = solution(n,k,arr)
print(answer)