def solution(N,M,graph):
  # 1번
  shape1 = ((0,0),(0,1),(0,2),(0,3))
  shape2 = ((0,0),(1,0),(2,0),(3,0))
  # 2번
  shape3 = ((0,0),(0,1),(1,0),(1,1))
  # 3번
  shape4 = ((0,0),(1,0),(2,0),(2,1))
  shape5 = ((0,1),(1,1),(2,1),(2,0))
  shape6 = ((0,2),(1,0),(1,1),(1,2))
  shape7 = ((0,0),(1,0),(1,1),(1,2))
  shape8 = ((0,0),(0,1),(1,1),(2,1))
  shape9 = ((0,0),(0,1),(1,0),(2,0))
  shape10 = ((0,0),(0,1),(0,2),(1,0))
  shape11 = ((0,0),(0,1),(0,2),(1,2))
  # 4번
  shape12 = ((0,0),(1,0),(1,1),(2,1))
  shape13 = ((0,1),(1,1),(1,0),(2,0))
  shape14 = ((0,2),(0,1),(1,1),(1,0))
  shape15 = ((0,0),(0,1),(1,1),(1,2))
  # 5번
  shape16 = ((0,0),(0,1),(0,2),(1,1))
  shape17 = ((0,0),(1,0),(1,1),(2,0))
  shape18 = ((0,1),(1,1),(1,0),(2,1))
  shape19 = ((0,1),(1,0),(1,1),(1,2))
  
  shapes = (shape1, shape2, shape3, shape4, shape5, shape6, shape7, shape8, shape9, shape10, 
         shape11, shape12, shape13, shape14, shape15, shape16, shape17, shape18, shape19)

  Max = 0
  for shape in shapes:
    for x in range(N):
      for y in range(M):
        a1,b1 = x+shape[0][0],y+shape[0][1]
        a2,b2 = x+shape[1][0],y+shape[1][1]
        a3,b3 = x+shape[2][0],y+shape[2][1]
        a4,b4 = x+shape[3][0],y+shape[3][1]

        if 0<=a1<N and 0<=b1<M and 0<=a2<N and 0<=b2<M and 0<=a3<N and 0<=b3<M and 0<=a4<N and 0<=b4<M:
          temp = graph[a1][b1] + graph[a2][b2] + graph[a3][b3] + graph[a4][b4]
          if Max < temp: Max = temp
      
  return Max
N,M = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(N)]
print(solution(N,M,graph))